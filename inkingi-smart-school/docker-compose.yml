version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: inkingi-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inkingi_school
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - inkingi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: inkingi-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - inkingi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inkingi-backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - inkingi-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inkingi-celery-worker
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    depends_on:
      - redis
      - postgres
    networks:
      - inkingi-network
    command: celery -A app.workers.celery_app worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inkingi-celery-beat
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - postgres
    networks:
      - inkingi-network
    command: celery -A app.workers.celery_app beat --loglevel=info

  # Flower (Celery monitoring)
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inkingi-flower
    env_file:
      - ./backend/.env
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - inkingi-network
    command: celery -A app.workers.celery_app flower --port=5555

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: inkingi-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000/api/v1
    networks:
      - inkingi-network
    command: npm run dev -- --host 0.0.0.0

  # Nginx (Production only)
  # nginx:
  #   image: nginx:alpine
  #   container_name: inkingi-nginx
  #   volumes:
  #     - ./infrastructure/nginx.conf:/etc/nginx/nginx.conf
  #     - ./infrastructure/ssl:/etc/nginx/ssl
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - inkingi-network

networks:
  inkingi-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  uploads: